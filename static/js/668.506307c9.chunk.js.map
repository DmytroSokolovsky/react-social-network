{"version":3,"file":"static/js/668.506307c9.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.module.css","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/common/FormsControls/FormsControl.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControl.module.css?deb2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"content__image\":\"ProfileInfo_content__image__0oZlT\",\"content__description\":\"ProfileInfo_content__description__tE-8E\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QcTaK\",\"contact\":\"ProfileInfo_contact__VM5R9\"};","import React, { Component, useState, useEffect } from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\tstate = {\r\n\t\teditMode: false,\r\n\t\tstatus: this.props.status,\r\n\t};\r\n\r\n\tactivateEditMode = () => {\r\n\t\tconsole.log(\"this:\", this);\r\n\t\tthis.setState({\r\n\t\t\teditMode: true,\r\n\t\t});\r\n\t};\r\n\tdeActivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode: false,\r\n\t\t});\r\n\t\tthis.props.updateStatus(this.state.status);\r\n\t};\r\n\tonStatusChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tstatus: e.currentTarget.value,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.status !== this.props.status) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstatus: this.props.status,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tStatus:{\" \"}\r\n\t\t\t\t{!this.state.editMode && (\r\n\t\t\t\t\t<span onDoubleClick={this.activateEditMode}>\r\n\t\t\t\t\t\t{this.props.status || \"------\"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.state.editMode && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.onStatusChange}\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tonBlur={this.deActivateEditMode}\r\n\t\t\t\t\t\t\tvalue={this.state.status}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// const ProfileStatus = (props) => {\r\n// \tconst [editMode, setEditMode] = useState(false);\r\n// \tconst [status, setStatus] = useState(props.status);\r\n\r\n// \tuseEffect(() => {\r\n// \t\tsetStatus(props.status);\r\n// \t}, [props.status]);\r\n\r\n// \tlet activateEditMode = () => {\r\n// \t\tsetEditMode(true);\r\n// \t};\r\n\r\n// \tlet deActivateEditMode = () => {\r\n// \t\tsetEditMode(false);\r\n// \t\tprops.updateStatus(status);\r\n// \t};\r\n\r\n// \tlet onStatusChange = (e) => {\r\n// \t\tsetStatus(e.currentTarget.value);\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t{!editMode && (\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<span onDoubleClick={activateEditMode}>\r\n// \t\t\t\t\t\t{props.status || \"-----\"}\r\n// \t\t\t\t\t</span>\r\n// \t\t\t\t</div>\r\n// \t\t\t)}\r\n// \t\t\t{editMode && (\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<input\r\n// \t\t\t\t\t\tonChange={onStatusChange}\r\n// \t\t\t\t\t\tautoFocus\r\n// \t\t\t\t\t\tonBlur={deActivateEditMode}\r\n// \t\t\t\t\t\tvalue={status}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t</div>\r\n// \t\t\t)}\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\nexport default ProfileStatus;\r\n","import {\r\n\tInput,\r\n\tcreateField,\r\n\tTextarea,\r\n} from \"./../../common/FormsControls/FormsControl\";\r\nimport { Contact } from \"./ProfileInfo\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"./../../common/FormsControls/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Save</button>\r\n\t\t\t</div>\r\n\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\r\n\t\t\t<div>Full name: {createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n\t\t\t<div>\r\n\t\t\t\tLooking fot a job:{\" \"}\r\n\t\t\t\t{createField(\"Looking for a job\", \"lookingForAJob\", [], Input, {\r\n\t\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tMy professional skills:\r\n\t\t\t\t{createField(\r\n\t\t\t\t\t\"Looking for a job description\",\r\n\t\t\t\t\t\"lookingForAJobDescription\",\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tTextarea\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>About me: {createField(\"About me\", \"AboutMe\", [], Textarea)}</div>\r\n\t\t\t<div>\r\n\t\t\t\tContacts:{\" \"}\r\n\t\t\t\t{Object.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key}>\r\n\t\t\t\t\t\t\t<div className={s.contact}>{key}</div>\r\n\t\t\t\t\t\t\t<div className={s.contact}>\r\n\t\t\t\t\t\t\t\t{createField(key, \"contacts.\" + key, [], Input)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n\tform: \"edit-profile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport landscape from \"./../../../landscape.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../userPhoto.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.savePhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.saveProfile(formData).then(() => {\r\n\t\t\tsetEditMode(false);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <div className={classes.content__image}>\r\n            <img src={landscape} alt=\"\" />\r\n         </div> */}\r\n\t\t\t<div className={s.content__description}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={props.profile.photos.large || userPhoto}\r\n\t\t\t\t\tclassName={s.mainPhoto}\r\n\t\t\t\t/>\r\n\t\t\t\t{props.isOwner && (\r\n\t\t\t\t\t<input type=\"file\" onChange={onMainPhotoSelected} />\r\n\t\t\t\t)}\r\n\t\t\t\t{editMode ? (\r\n\t\t\t\t\t<ProfileDataFormReduxForm\r\n\t\t\t\t\t\tinitialValues={props.profile}\r\n\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ProfileData\r\n\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\t\tgoToEditMode={() => {\r\n\t\t\t\t\t\t\tsetEditMode(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<ProfileStatus\r\n\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={goToEditMode}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div>Full name: {profile.fullName}</div>\r\n\t\t\t<div>Looking fot a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n\t\t\t{profile.lookingForAJob && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\tMy professional skills: {profile.lookingForAJobDescription}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\tContacts:{\" \"}\r\n\t\t\t\t{Object.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Contact\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tcontactTitle={key}\r\n\t\t\t\t\t\t\tcontactValue={profile.contacts[key]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n\treturn (\r\n\t\t<div className={s.contact}>\r\n\t\t\t{contactTitle}: {contactValue}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content__posts\":\"MyPosts_content__posts__qp3bZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"content__post\":\"Post_content__post__Drbzd\"};","import classes from \"./Post.module.css\";\r\nimport avatar from \"../../../../Avatar.jpg\";\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.content__post}>\r\n\t\t\t{props.message} {props.likesCount}\r\n\t\t\t<img src={avatar} alt=\"\" />\r\n\t\t\t<div>Like</div>\r\n\t\t\t<span>Dislike</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControl\";\r\nimport {\r\n\tmaxLengthCreator,\r\n\trequired,\r\n} from \"./../../../utils/validators/validators\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\tlet postElemets = [...props.postsData].reverse().map((post) => {\r\n\t\treturn (\r\n\t\t\t<Post\r\n\t\t\t\tmessage={post.message}\r\n\t\t\t\tlikesCount={post.likesCount}\r\n\t\t\t\tkey={post.id}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet onAddPost = () => {\r\n\t\tprops.addPost();\r\n\t};\r\n\r\n\tlet onPostChange = () => {\r\n\t\tlet text = newPostElement.current.value;\r\n\t\tprops.updateNewPostText(text);\r\n\t};\r\n\r\n\tconst addNewPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMy posts\r\n\t\t\t<div>\r\n\t\t\t\t<AddNewPostFormRedux onSubmit={addNewPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.content__posts}>{postElemets}</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\n// class MyPosts extends PureComponent {\r\n// \tcomponentDidMount() {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tthis.setState({ a: 12 });\r\n// \t\t}, 3000);\r\n// \t}\r\n\r\n// \t// shouldComponentUpdate(nextProps, nextState) {\r\n// \t// \treturn nextProps != this.props || nextState != this.state;\r\n// \t// }\r\n\r\n// \tnewPostElement = React.createRef();\r\n\r\n// \tpostElemets = this.props.postsData.map((post) => {\r\n// \t\treturn (\r\n// \t\t\t<Post\r\n// \t\t\t\tmessage={post.message}\r\n// \t\t\t\tlikesCount={post.likesCount}\r\n// \t\t\t\tkey={post.id}\r\n// \t\t\t/>\r\n// \t\t);\r\n// \t});\r\n\r\n// \tonAddPost() {\r\n// \t\tthis.props.addPost();\r\n// \t}\r\n\r\n// \tonPostChange() {\r\n// \t\tlet text = this.newPostElement.current.value;\r\n// \t\tthis.props.updateNewPostText(text);\r\n// \t}\r\n\r\n// \taddNewPost(values) {\r\n// \t\tthis.props.addPost(values.newPostText);\r\n// \t}\r\n\r\n// \trender() {\r\n// \t\tconsole.log(\"MyPosts\");\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\tMy posts\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<AddNewPostFormRedux onSubmit={this.addNewPost} />\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<div className={classes.content__posts}>{this.postElemets}</div>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname=\"newPostText\"\r\n\t\t\t\t\tplaceholder=\"Enter your post\"\r\n\t\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button>Add post</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n\tform: \"post\",\r\n})(AddNewPostForm);\r\n\r\n// const addNewPostForm = (props) => {\r\n//    return (\r\n//       <form>\r\n//          <div>\r\n//             <textarea\r\n//                onChange={onPostChange}\r\n//                ref={newPostElement}\r\n//                value={props.newPostText}\r\n//             />\r\n//          </div>\r\n//          <button onClick={onAddPost}>Add post</button>\r\n//       </form>\r\n//    )\r\n// }\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n\taddPostActionCreator,\r\n\tupdateNewPostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n// import StoreContext from \"../../../StoreContext\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tlet state = store.getState();\r\n// \t\t\t\tlet addPost = () => {\r\n// \t\t\t\t\tstore.dispatch(addPostActionCreator());\r\n// \t\t\t\t};\r\n\r\n// \t\t\t\tlet onPostChange = (text) => {\r\n// \t\t\t\t\tlet action = updateNewPostTextActionCreator(text);\r\n// \t\t\t\t\tstore.dispatch(action);\r\n// \t\t\t\t};\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<MyPosts\r\n// \t\t\t\t\t\tupdateNewPostText={onPostChange}\r\n// \t\t\t\t\t\taddPost={addPost}\r\n// \t\t\t\t\t\tpostsData={state.profilePage.postsData}\r\n// \t\t\t\t\t\tnewPostText={state.profilePage.newPostText}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t);\r\n// \t\t\t}}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// };\r\n\r\n// export default MyPostsContainer;\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tpostsData: state.profilePage.postsData,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t// updateNewPostText: (text) => {\r\n\t\t// \tlet action = updateNewPostTextActionCreator(text);\r\n\t\t// \tdispatch(action);\r\n\t\t// },\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<main className={classes.content}>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import s from \"./FormsControl.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { error, touched }, children }) => {\r\n\tconst hasError = error && touched;\r\n\treturn (\r\n\t\t<div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\r\n\t\t\t<div>{children}</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...input} {...restProps}></textarea>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...input} {...restProps}></input>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const createField = (\r\n\tplaceholder,\r\n\tname,\r\n\tvalidators,\r\n\tcomponent,\r\n\tprops = {},\r\n\ttext = \"\"\r\n) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalidate={validators}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Navigate to={\"/login\"} />;\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","export const required = (value) => {\r\n\tif (value) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) {\r\n\t\treturn \"Max length is 30 symbols\";\r\n\t}\r\n\treturn undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__eQTo6\",\"error\":\"FormsControl_error__fzvMF\",\"formSummaryError\":\"FormsControl_formSummaryError__bWQZk\"};"],"names":["ProfileStatus","React","constructor","arguments","state","editMode","status","this","props","activateEditMode","console","log","setState","deActivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","render","_jsxs","children","_jsx","onDoubleClick","onChange","autoFocus","onBlur","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","_ref2","setEditMode","useState","Preloader","_Fragment","src","photos","large","userPhoto","target","files","length","savePhoto","ProfileDataFormReduxForm","initialValues","formData","saveProfile","then","classes","message","likesCount","alt","MyPosts","postElemets","postsData","reverse","post","Post","id","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","connect","profilePage","dispatch","addPostActionCreator","content","ProfileInfo","MyPostsContainer","FormControl","input","meta","touched","hasError","concat","formControl","child","restProps","validators","undefined","text","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","Navigate","to","maxLength"],"sourceRoot":""}