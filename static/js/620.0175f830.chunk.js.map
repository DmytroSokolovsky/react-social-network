{"version":3,"file":"static/js/620.0175f830.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControl.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControl.module.css?deb2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__97yZ0\",\"dialogs__items\":\"Dialogs_dialogs__items__K2MeS\",\"dialogs__item\":\"Dialogs_dialogs__item__EmLIO\",\"active\":\"Dialogs_active__8m99n\",\"dialogs__messages\":\"Dialogs_dialogs__messages__Kluan\",\"messages\":\"Dialogs_messages__1C5jA\",\"messages__item\":\"Dialogs_messages__item__zwQ3A\",\"dialogsButton\":\"Dialogs_dialogsButton__dJbb9\"};","import classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={`${classes.dialogs__item} ${classes.active}`}>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogMessage = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={classes.messages__item}>{props.message}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DialogMessage;\r\n","import classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\r\nimport { React } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"./../common/FormsControls/FormsControl\";\r\nimport {\r\n\tmaxLengthCreator,\r\n\trequired,\r\n} from \"./../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\tlet state = props.messagesPage;\r\n\r\n\tlet dialogsElements = state.dialogsData.map((dialog) => {\r\n\t\treturn <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />;\r\n\t});\r\n\tlet messagesElements = state.messagesData.map((message) => {\r\n\t\treturn <DialogMessage message={message.message} key={message.id} />;\r\n\t});\r\n\tlet newMessageText = state.newMessageText;\r\n\r\n\t// let onMessageChange = (e) => {\r\n\t// \tlet body = e.target.value;\r\n\t// \tprops.updateNewMessageText(body);\r\n\t// };\r\n\r\n\t// let onSendMessage = () => {\r\n\t// \tprops.sendMessage();\r\n\t// };\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogs__items}>{dialogsElements}</div>\r\n\t\t\t<div className={`${classes.dialogs__messages} ${classes.messages}`}>\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t\t{messagesElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tname=\"newMessageBody\"\r\n\t\t\t\tplaceholder=\"Enter your message\"\r\n\t\t\t\tvalidate={[required, maxLength30]}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<button className={classes.dialogsButton}>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n\tform: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\n// const AddMessageForm = (props) => {\r\n// \treturn (\r\n// \t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t<div className={`${classes.dialogs__messages} ${classes.messages}`}>\r\n// \t\t\t\t<Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n// \t\t\t\t<textarea\r\n// \t\t\t\t\tplaceholder=\"Enter your message\"\r\n// \t\t\t\t\tonChange={onMessageChange}\r\n// \t\t\t\t\tvalue={newMessageText}\r\n// \t\t\t\t></textarea>\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<button\r\n// \t\t\t\t\t\tclassName={classes.dialogsButton}\r\n// \t\t\t\t\t\tonClick={onSendMessage}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\tSend\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t</div>\r\n// \t\t\t\t{messagesElements}\r\n// \t\t\t</div>\r\n// \t\t</form>\r\n// \t);\r\n// };\r\n\r\nexport default Dialogs;\r\n","import { React } from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {\r\n\tupdateNewMessageTextCreator,\r\n\tsendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\n// import StoreContext from \"../../StoreContext\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tlet state = store.getState().messagesPage;\r\n\r\n// \t\t\t\tlet onMessageChange = (body) => {\r\n// \t\t\t\t\tstore.dispatch(updateNewMessageTextCreator(body));\r\n// \t\t\t\t};\r\n\r\n// \t\t\t\tlet onSendMessage = () => {\r\n// \t\t\t\t\tstore.dispatch(sendMessageCreator());\r\n// \t\t\t\t};\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<Dialogs\r\n// \t\t\t\t\t\tupdateNewMessageText={onMessageChange}\r\n// \t\t\t\t\t\tsendMessage={onSendMessage}\r\n// \t\t\t\t\t\tmessagesPage={state}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t);\r\n// \t\t\t}}\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// };\r\n\r\n// export default DialogsContainer;\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmessagesPage: state.messagesPage,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t// updateNewMessageText: (body) => {\r\n\t\t// \tdispatch(updateNewMessageTextCreator(body));\r\n\t\t// },\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n","import s from \"./FormsControl.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { error, touched }, children }) => {\r\n\tconst hasError = error && touched;\r\n\treturn (\r\n\t\t<div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\r\n\t\t\t<div>{children}</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<textarea {...input} {...restProps}></textarea>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...input} {...restProps}></input>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const createField = (\r\n\tplaceholder,\r\n\tname,\r\n\tvalidators,\r\n\tcomponent,\r\n\tprops = {},\r\n\ttext = \"\"\r\n) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalidate={validators}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t};\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Navigate to={\"/login\"} />;\r\n\t\t\t}\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","export const required = (value) => {\r\n\tif (value) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) {\r\n\t\treturn \"Max length is 30 symbols\";\r\n\t}\r\n\treturn undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__eQTo6\",\"error\":\"FormsControl_error__fzvMF\",\"formSummaryError\":\"FormsControl_formSummaryError__bWQZk\"};"],"names":["props","_jsx","className","concat","classes","children","NavLink","to","id","name","_Fragment","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","messagesPage","dialogsElements","dialogsData","map","dialog","DialogItem","messagesElements","messagesData","DialogMessage","newMessageText","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","FormControl","_ref","input","meta","error","touched","hasError","s","formControl","child","restProps","Input","createField","validators","arguments","length","undefined","text","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","value","maxLength"],"sourceRoot":""}